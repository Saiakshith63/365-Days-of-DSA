class Solution(object):
    def findSubstring(self, s, words):
        """
        :type s: str
        :type words: List[str]
        :rtype: List[int]
        """
        from collections import Counter
        
        if not s or not words:
            return []
        
        word_length = len(words[0])
        word_count = len(words)
        substring_length = word_length * word_count
        word_map = Counter(words)
        result = []

        for i in range(word_length):
            left = i
            right = i
            temp_map = Counter()
            count = 0

            while right + word_length <= len(s):
                word = s[right:right + word_length]
                right += word_length

                if word in word_map:
                    temp_map[word] += 1
                    count += 1

                    while temp_map[word] > word_map[word]:
                        temp_map[s[left:left + word_length]] -= 1
                        count -= 1
                        left += word_length

                    if count == word_count:
                        result.append(left)
                else:
                    temp_map.clear()
                    count = 0
                    left = right

        return result
